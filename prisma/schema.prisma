// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int                @id @default(autoincrement())
  fullname         String
  mobile           String
  gender           String
  nationalCode     String
  birthday         String
  city             String
  image            String
  fatherName       String
  bloodCategory    String
  specialIllness   String
  emergencyMobile  String
  otp              String             @default("12345")
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now()) @updatedAt
  Groups           String[]
  Team             Team[]
  ProgramRegisters ProgramRegisters[]

  @@map("user")
}

model Team {
  id            Int    @id @default(autoincrement())
  user          User?  @relation(fields: [userId], references: [id])
  userId        Int
  fullname      String
  natinalCode   String
  image         String
  fatherName    String
  bloodCategory String

  @@index([userId])
  @@map("users")
}

model Clients {
  id               Int                @id @default(autoincrement())
  company_name     String
  company_logo     String
  province         String
  city             String
  Address          String
  Phones           String
  Socials          String[]
  website          String
  cto_name         String
  cto_nationCode   String
  cto_birthday     String
  cto_fatherName   String
  cto_phone        String
  email            String             @unique
  username         String
  password         String
  accountStatus    Stats              @default(NOTACTIVE)
  groupName        String
  description      String
  groupStatus      Stats              @default(ACTIVE)
  groupCodes       String             @unique
  Packages         Packages?          @relation(fields: [packagesId], references: [id])
  packagesId       Int?
  Program          Program[]
  ProgramRegisters ProgramRegisters[]
}

model Packages {
  id             Int       @id @default(autoincrement())
  name           String
  price          String
  expirationTime String
  Clients        Clients[]
}

model Program {
  id               Int                @id @default(autoincrement())
  name             String
  groups           Clients            @relation(fields: [groupsCode], references: [groupCodes])
  groupsCode       String
  status           Stats
  time             String
  departure        String
  destination      String
  price            String
  ProgramRegisters ProgramRegisters[]
}

model News {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model ProgramRegisters {
  id         Int                         @id @default(autoincrement())
  users      User?                       @relation(fields: [userId], references: [id])
  userId     Int
  groups     Clients                     @relation(fields: [groupsCode], references: [groupCodes])
  groupsCode String
  programs   Program?                    @relation(fields: [programId], references: [id])
  programId  Int
  status     ProgramsRegisterationStatus
}

// Controll roles of users
enum Role {
  CLIENT
  ADMIN
}

enum Stats {
  ACTIVE
  NOTACTIVE
  SUSPENDED
}

enum ProgramsRegisterationStatus {
  SUCCUSS
  SUSSPENDED
  NOTPAYED
}
